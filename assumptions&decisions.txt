- change membershipId to membership while filtering membership with its periods to match the name in the membershipPeriod
- for membership with id=3, change the paymentMethod from null to a valid paymentMethod (ex: cash) as the paymentMethod should be a valid string (as per the data model)
- assumption: that valid paymentMethod(s) are "cash" and "credit card"
- decision: added a new custom error message for invalid paymentMethod "invalidPaymentMethod"
- renaming "invalidBillingPeriods" error message to "invalidBillingInterval" as the if condition check for the billingInterval not the billingPeriods
- assumption&decision: all parsed fields from the request body are mandatory fields, therefore I add a validation check using Zod for the mandatory fields (name, recurringPrice, paymentMethod, billingInterval, billingPeriods)
- error message "billingPeriodsLessThan3Years" is implemented incorrect. I fixed it
- decision: added Zod to validate request body
- I noticed that for the legacy endpoints, GET /memberships return inner keys "membership" and "periods", while POST /memberships return inner keys "membership" and "membershipPeriods". Since they requirement is to maintain exact same response, I will maintain them as they are in the legacy.
- The loaded memberships from the static json have its keys ordered differently from how I ordered them in my code. I ordered them alplabeticaly to make reading (and also adding new keys) easier. But when displaying the result of memberships after adding a new membership, some memberships will have different order of its nested keys. For real database it won't happen because the database will return the keys sorted the same way every time!
- There is inconsistency between the return key "membershipId" when using the legacy POST endpoint and return key "membership" when using the modern POST endpoint when listing the membershipPeriods
- 